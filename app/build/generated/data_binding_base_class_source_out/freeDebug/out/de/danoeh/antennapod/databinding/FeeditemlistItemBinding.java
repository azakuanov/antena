// Generated by view binder compiler. Do not edit!
package de.danoeh.antennapod.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import de.danoeh.antennapod.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FeeditemlistItemBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final LinearLayout container;

  @NonNull
  public final CardView coverHolder;

  @NonNull
  public final ImageView dragHandle;

  @NonNull
  public final ImageView imgvCover;

  @NonNull
  public final ImageView isFavorite;

  @NonNull
  public final ImageView ivInPlaylist;

  @NonNull
  public final ImageView ivIsVideo;

  @NonNull
  public final LinearLayout leftPadding;

  @NonNull
  public final LinearLayout progress;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView separatorIcons;

  @NonNull
  public final TextView size;

  @NonNull
  public final LinearLayout status;

  @NonNull
  public final TextView statusUnread;

  @NonNull
  public final TextView txtvDuration;

  @NonNull
  public final TextView txtvPlaceholder;

  @NonNull
  public final TextView txtvPosition;

  @NonNull
  public final TextView txtvPubDate;

  @NonNull
  public final TextView txtvTitle;

  private FeeditemlistItemBinding(@NonNull FrameLayout rootView, @NonNull LinearLayout container,
      @NonNull CardView coverHolder, @NonNull ImageView dragHandle, @NonNull ImageView imgvCover,
      @NonNull ImageView isFavorite, @NonNull ImageView ivInPlaylist, @NonNull ImageView ivIsVideo,
      @NonNull LinearLayout leftPadding, @NonNull LinearLayout progress,
      @NonNull ProgressBar progressBar, @NonNull TextView separatorIcons, @NonNull TextView size,
      @NonNull LinearLayout status, @NonNull TextView statusUnread, @NonNull TextView txtvDuration,
      @NonNull TextView txtvPlaceholder, @NonNull TextView txtvPosition,
      @NonNull TextView txtvPubDate, @NonNull TextView txtvTitle) {
    this.rootView = rootView;
    this.container = container;
    this.coverHolder = coverHolder;
    this.dragHandle = dragHandle;
    this.imgvCover = imgvCover;
    this.isFavorite = isFavorite;
    this.ivInPlaylist = ivInPlaylist;
    this.ivIsVideo = ivIsVideo;
    this.leftPadding = leftPadding;
    this.progress = progress;
    this.progressBar = progressBar;
    this.separatorIcons = separatorIcons;
    this.size = size;
    this.status = status;
    this.statusUnread = statusUnread;
    this.txtvDuration = txtvDuration;
    this.txtvPlaceholder = txtvPlaceholder;
    this.txtvPosition = txtvPosition;
    this.txtvPubDate = txtvPubDate;
    this.txtvTitle = txtvTitle;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FeeditemlistItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FeeditemlistItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.feeditemlist_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FeeditemlistItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      LinearLayout container = rootView.findViewById(R.id.container);
      if (container == null) {
        missingId = "container";
        break missingId;
      }
      CardView coverHolder = rootView.findViewById(R.id.coverHolder);
      if (coverHolder == null) {
        missingId = "coverHolder";
        break missingId;
      }
      ImageView dragHandle = rootView.findViewById(R.id.drag_handle);
      if (dragHandle == null) {
        missingId = "dragHandle";
        break missingId;
      }
      ImageView imgvCover = rootView.findViewById(R.id.imgvCover);
      if (imgvCover == null) {
        missingId = "imgvCover";
        break missingId;
      }
      ImageView isFavorite = rootView.findViewById(R.id.isFavorite);
      if (isFavorite == null) {
        missingId = "isFavorite";
        break missingId;
      }
      ImageView ivInPlaylist = rootView.findViewById(R.id.ivInPlaylist);
      if (ivInPlaylist == null) {
        missingId = "ivInPlaylist";
        break missingId;
      }
      ImageView ivIsVideo = rootView.findViewById(R.id.ivIsVideo);
      if (ivIsVideo == null) {
        missingId = "ivIsVideo";
        break missingId;
      }
      LinearLayout leftPadding = rootView.findViewById(R.id.left_padding);
      if (leftPadding == null) {
        missingId = "leftPadding";
        break missingId;
      }
      LinearLayout progress = rootView.findViewById(R.id.progress);
      if (progress == null) {
        missingId = "progress";
        break missingId;
      }
      ProgressBar progressBar = rootView.findViewById(R.id.progressBar);
      if (progressBar == null) {
        missingId = "progressBar";
        break missingId;
      }
      TextView separatorIcons = rootView.findViewById(R.id.separatorIcons);
      if (separatorIcons == null) {
        missingId = "separatorIcons";
        break missingId;
      }
      TextView size = rootView.findViewById(R.id.size);
      if (size == null) {
        missingId = "size";
        break missingId;
      }
      LinearLayout status = rootView.findViewById(R.id.status);
      if (status == null) {
        missingId = "status";
        break missingId;
      }
      TextView statusUnread = rootView.findViewById(R.id.statusUnread);
      if (statusUnread == null) {
        missingId = "statusUnread";
        break missingId;
      }
      TextView txtvDuration = rootView.findViewById(R.id.txtvDuration);
      if (txtvDuration == null) {
        missingId = "txtvDuration";
        break missingId;
      }
      TextView txtvPlaceholder = rootView.findViewById(R.id.txtvPlaceholder);
      if (txtvPlaceholder == null) {
        missingId = "txtvPlaceholder";
        break missingId;
      }
      TextView txtvPosition = rootView.findViewById(R.id.txtvPosition);
      if (txtvPosition == null) {
        missingId = "txtvPosition";
        break missingId;
      }
      TextView txtvPubDate = rootView.findViewById(R.id.txtvPubDate);
      if (txtvPubDate == null) {
        missingId = "txtvPubDate";
        break missingId;
      }
      TextView txtvTitle = rootView.findViewById(R.id.txtvTitle);
      if (txtvTitle == null) {
        missingId = "txtvTitle";
        break missingId;
      }
      return new FeeditemlistItemBinding((FrameLayout) rootView, container, coverHolder, dragHandle,
          imgvCover, isFavorite, ivInPlaylist, ivIsVideo, leftPadding, progress, progressBar,
          separatorIcons, size, status, statusUnread, txtvDuration, txtvPlaceholder, txtvPosition,
          txtvPubDate, txtvTitle);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
