// Generated by view binder compiler. Do not edit!
package de.danoeh.antennapod.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.ScrollView;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import de.danoeh.antennapod.R;
import de.danoeh.antennapod.view.PlaybackSpeedSeekBar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AudioControlsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button audioTracks;

  @NonNull
  public final CheckBox skipSilence;

  @NonNull
  public final PlaybackSpeedSeekBar speedSeekBar;

  @NonNull
  public final CheckBox stereoToMono;

  @NonNull
  public final TextView txtvLeft;

  @NonNull
  public final TextView txtvPlaybackSpeed;

  @NonNull
  public final TextView txtvRight;

  @NonNull
  public final SeekBar volumeLeft;

  @NonNull
  public final SeekBar volumeRight;

  private AudioControlsBinding(@NonNull ScrollView rootView, @NonNull Button audioTracks,
      @NonNull CheckBox skipSilence, @NonNull PlaybackSpeedSeekBar speedSeekBar,
      @NonNull CheckBox stereoToMono, @NonNull TextView txtvLeft,
      @NonNull TextView txtvPlaybackSpeed, @NonNull TextView txtvRight, @NonNull SeekBar volumeLeft,
      @NonNull SeekBar volumeRight) {
    this.rootView = rootView;
    this.audioTracks = audioTracks;
    this.skipSilence = skipSilence;
    this.speedSeekBar = speedSeekBar;
    this.stereoToMono = stereoToMono;
    this.txtvLeft = txtvLeft;
    this.txtvPlaybackSpeed = txtvPlaybackSpeed;
    this.txtvRight = txtvRight;
    this.volumeLeft = volumeLeft;
    this.volumeRight = volumeRight;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static AudioControlsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AudioControlsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.audio_controls, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AudioControlsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      Button audioTracks = rootView.findViewById(R.id.audio_tracks);
      if (audioTracks == null) {
        missingId = "audioTracks";
        break missingId;
      }
      CheckBox skipSilence = rootView.findViewById(R.id.skipSilence);
      if (skipSilence == null) {
        missingId = "skipSilence";
        break missingId;
      }
      PlaybackSpeedSeekBar speedSeekBar = rootView.findViewById(R.id.speed_seek_bar);
      if (speedSeekBar == null) {
        missingId = "speedSeekBar";
        break missingId;
      }
      CheckBox stereoToMono = rootView.findViewById(R.id.stereo_to_mono);
      if (stereoToMono == null) {
        missingId = "stereoToMono";
        break missingId;
      }
      TextView txtvLeft = rootView.findViewById(R.id.txtvLeft);
      if (txtvLeft == null) {
        missingId = "txtvLeft";
        break missingId;
      }
      TextView txtvPlaybackSpeed = rootView.findViewById(R.id.txtvPlaybackSpeed);
      if (txtvPlaybackSpeed == null) {
        missingId = "txtvPlaybackSpeed";
        break missingId;
      }
      TextView txtvRight = rootView.findViewById(R.id.txtvRight);
      if (txtvRight == null) {
        missingId = "txtvRight";
        break missingId;
      }
      SeekBar volumeLeft = rootView.findViewById(R.id.volume_left);
      if (volumeLeft == null) {
        missingId = "volumeLeft";
        break missingId;
      }
      SeekBar volumeRight = rootView.findViewById(R.id.volume_right);
      if (volumeRight == null) {
        missingId = "volumeRight";
        break missingId;
      }
      return new AudioControlsBinding((ScrollView) rootView, audioTracks, skipSilence, speedSeekBar,
          stereoToMono, txtvLeft, txtvPlaybackSpeed, txtvRight, volumeLeft, volumeRight);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
