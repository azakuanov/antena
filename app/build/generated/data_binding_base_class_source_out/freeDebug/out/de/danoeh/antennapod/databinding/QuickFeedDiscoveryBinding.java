// Generated by view binder compiler. Do not edit!
package de.danoeh.antennapod.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import de.danoeh.antennapod.R;
import de.danoeh.antennapod.ui.common.WrappingGridView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class QuickFeedDiscoveryBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout discoverError;

  @NonNull
  public final Button discoverErrorRetryBtn;

  @NonNull
  public final TextView discoverErrorTxtV;

  @NonNull
  public final WrappingGridView discoverGrid;

  @NonNull
  public final Button discoverMore;

  @NonNull
  public final TextView discoverPoweredByItunes;

  @NonNull
  public final ProgressBar discoverProgressBar;

  private QuickFeedDiscoveryBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout discoverError, @NonNull Button discoverErrorRetryBtn,
      @NonNull TextView discoverErrorTxtV, @NonNull WrappingGridView discoverGrid,
      @NonNull Button discoverMore, @NonNull TextView discoverPoweredByItunes,
      @NonNull ProgressBar discoverProgressBar) {
    this.rootView = rootView;
    this.discoverError = discoverError;
    this.discoverErrorRetryBtn = discoverErrorRetryBtn;
    this.discoverErrorTxtV = discoverErrorTxtV;
    this.discoverGrid = discoverGrid;
    this.discoverMore = discoverMore;
    this.discoverPoweredByItunes = discoverPoweredByItunes;
    this.discoverProgressBar = discoverProgressBar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static QuickFeedDiscoveryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static QuickFeedDiscoveryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.quick_feed_discovery, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static QuickFeedDiscoveryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      LinearLayout discoverError = rootView.findViewById(R.id.discover_error);
      if (discoverError == null) {
        missingId = "discoverError";
        break missingId;
      }
      Button discoverErrorRetryBtn = rootView.findViewById(R.id.discover_error_retry_btn);
      if (discoverErrorRetryBtn == null) {
        missingId = "discoverErrorRetryBtn";
        break missingId;
      }
      TextView discoverErrorTxtV = rootView.findViewById(R.id.discover_error_txtV);
      if (discoverErrorTxtV == null) {
        missingId = "discoverErrorTxtV";
        break missingId;
      }
      WrappingGridView discoverGrid = rootView.findViewById(R.id.discover_grid);
      if (discoverGrid == null) {
        missingId = "discoverGrid";
        break missingId;
      }
      Button discoverMore = rootView.findViewById(R.id.discover_more);
      if (discoverMore == null) {
        missingId = "discoverMore";
        break missingId;
      }
      TextView discoverPoweredByItunes = rootView.findViewById(R.id.discover_powered_by_itunes);
      if (discoverPoweredByItunes == null) {
        missingId = "discoverPoweredByItunes";
        break missingId;
      }
      ProgressBar discoverProgressBar = rootView.findViewById(R.id.discover_progress_bar);
      if (discoverProgressBar == null) {
        missingId = "discoverProgressBar";
        break missingId;
      }
      return new QuickFeedDiscoveryBinding((LinearLayout) rootView, discoverError,
          discoverErrorRetryBtn, discoverErrorTxtV, discoverGrid, discoverMore,
          discoverPoweredByItunes, discoverProgressBar);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
