// Generated by view binder compiler. Do not edit!
package de.danoeh.antennapod.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.GridView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import de.danoeh.antennapod.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSubscriptionsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView feedsFilteredMessage;

  @NonNull
  public final ProgressBar progLoading;

  @NonNull
  public final FloatingActionButton subscriptionsAdd;

  @NonNull
  public final GridView subscriptionsGrid;

  @NonNull
  public final SwipeRefreshLayout swipeRefresh;

  @NonNull
  public final Toolbar toolbar;

  private FragmentSubscriptionsBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView feedsFilteredMessage, @NonNull ProgressBar progLoading,
      @NonNull FloatingActionButton subscriptionsAdd, @NonNull GridView subscriptionsGrid,
      @NonNull SwipeRefreshLayout swipeRefresh, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.feedsFilteredMessage = feedsFilteredMessage;
    this.progLoading = progLoading;
    this.subscriptionsAdd = subscriptionsAdd;
    this.subscriptionsGrid = subscriptionsGrid;
    this.swipeRefresh = swipeRefresh;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSubscriptionsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSubscriptionsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_subscriptions, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSubscriptionsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      TextView feedsFilteredMessage = rootView.findViewById(R.id.feeds_filtered_message);
      if (feedsFilteredMessage == null) {
        missingId = "feedsFilteredMessage";
        break missingId;
      }
      ProgressBar progLoading = rootView.findViewById(R.id.progLoading);
      if (progLoading == null) {
        missingId = "progLoading";
        break missingId;
      }
      FloatingActionButton subscriptionsAdd = rootView.findViewById(R.id.subscriptions_add);
      if (subscriptionsAdd == null) {
        missingId = "subscriptionsAdd";
        break missingId;
      }
      GridView subscriptionsGrid = rootView.findViewById(R.id.subscriptions_grid);
      if (subscriptionsGrid == null) {
        missingId = "subscriptionsGrid";
        break missingId;
      }
      SwipeRefreshLayout swipeRefresh = rootView.findViewById(R.id.swipeRefresh);
      if (swipeRefresh == null) {
        missingId = "swipeRefresh";
        break missingId;
      }
      Toolbar toolbar = rootView.findViewById(R.id.toolbar);
      if (toolbar == null) {
        missingId = "toolbar";
        break missingId;
      }
      return new FragmentSubscriptionsBinding((RelativeLayout) rootView, feedsFilteredMessage,
          progLoading, subscriptionsAdd, subscriptionsGrid, swipeRefresh, toolbar);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
