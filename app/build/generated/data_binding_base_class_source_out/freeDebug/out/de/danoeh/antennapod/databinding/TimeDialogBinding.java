// Generated by view binder compiler. Do not edit!
package de.danoeh.antennapod.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import de.danoeh.antennapod.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TimeDialogBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CheckBox cbShakeToReset;

  @NonNull
  public final CheckBox cbVibrate;

  @NonNull
  public final CheckBox chAutoEnable;

  @NonNull
  public final Button disableSleeptimerButton;

  @NonNull
  public final EditText etxtTime;

  @NonNull
  public final Button extendSleepFiveMinutesButton;

  @NonNull
  public final Button extendSleepTenMinutesButton;

  @NonNull
  public final Button extendSleepTwentyMinutesButton;

  @NonNull
  public final Button setSleeptimerButton;

  @NonNull
  public final Spinner spTimeUnit;

  @NonNull
  public final TextView time;

  @NonNull
  public final LinearLayout timeDisplay;

  @NonNull
  public final LinearLayout timeSetup;

  private TimeDialogBinding(@NonNull LinearLayout rootView, @NonNull CheckBox cbShakeToReset,
      @NonNull CheckBox cbVibrate, @NonNull CheckBox chAutoEnable,
      @NonNull Button disableSleeptimerButton, @NonNull EditText etxtTime,
      @NonNull Button extendSleepFiveMinutesButton, @NonNull Button extendSleepTenMinutesButton,
      @NonNull Button extendSleepTwentyMinutesButton, @NonNull Button setSleeptimerButton,
      @NonNull Spinner spTimeUnit, @NonNull TextView time, @NonNull LinearLayout timeDisplay,
      @NonNull LinearLayout timeSetup) {
    this.rootView = rootView;
    this.cbShakeToReset = cbShakeToReset;
    this.cbVibrate = cbVibrate;
    this.chAutoEnable = chAutoEnable;
    this.disableSleeptimerButton = disableSleeptimerButton;
    this.etxtTime = etxtTime;
    this.extendSleepFiveMinutesButton = extendSleepFiveMinutesButton;
    this.extendSleepTenMinutesButton = extendSleepTenMinutesButton;
    this.extendSleepTwentyMinutesButton = extendSleepTwentyMinutesButton;
    this.setSleeptimerButton = setSleeptimerButton;
    this.spTimeUnit = spTimeUnit;
    this.time = time;
    this.timeDisplay = timeDisplay;
    this.timeSetup = timeSetup;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TimeDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TimeDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.time_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TimeDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      CheckBox cbShakeToReset = rootView.findViewById(R.id.cbShakeToReset);
      if (cbShakeToReset == null) {
        missingId = "cbShakeToReset";
        break missingId;
      }
      CheckBox cbVibrate = rootView.findViewById(R.id.cbVibrate);
      if (cbVibrate == null) {
        missingId = "cbVibrate";
        break missingId;
      }
      CheckBox chAutoEnable = rootView.findViewById(R.id.chAutoEnable);
      if (chAutoEnable == null) {
        missingId = "chAutoEnable";
        break missingId;
      }
      Button disableSleeptimerButton = rootView.findViewById(R.id.disableSleeptimerButton);
      if (disableSleeptimerButton == null) {
        missingId = "disableSleeptimerButton";
        break missingId;
      }
      EditText etxtTime = rootView.findViewById(R.id.etxtTime);
      if (etxtTime == null) {
        missingId = "etxtTime";
        break missingId;
      }
      Button extendSleepFiveMinutesButton = rootView.findViewById(R.id.extendSleepFiveMinutesButton);
      if (extendSleepFiveMinutesButton == null) {
        missingId = "extendSleepFiveMinutesButton";
        break missingId;
      }
      Button extendSleepTenMinutesButton = rootView.findViewById(R.id.extendSleepTenMinutesButton);
      if (extendSleepTenMinutesButton == null) {
        missingId = "extendSleepTenMinutesButton";
        break missingId;
      }
      Button extendSleepTwentyMinutesButton = rootView.findViewById(R.id.extendSleepTwentyMinutesButton);
      if (extendSleepTwentyMinutesButton == null) {
        missingId = "extendSleepTwentyMinutesButton";
        break missingId;
      }
      Button setSleeptimerButton = rootView.findViewById(R.id.setSleeptimerButton);
      if (setSleeptimerButton == null) {
        missingId = "setSleeptimerButton";
        break missingId;
      }
      Spinner spTimeUnit = rootView.findViewById(R.id.spTimeUnit);
      if (spTimeUnit == null) {
        missingId = "spTimeUnit";
        break missingId;
      }
      TextView time = rootView.findViewById(R.id.time);
      if (time == null) {
        missingId = "time";
        break missingId;
      }
      LinearLayout timeDisplay = rootView.findViewById(R.id.timeDisplay);
      if (timeDisplay == null) {
        missingId = "timeDisplay";
        break missingId;
      }
      LinearLayout timeSetup = rootView.findViewById(R.id.timeSetup);
      if (timeSetup == null) {
        missingId = "timeSetup";
        break missingId;
      }
      return new TimeDialogBinding((LinearLayout) rootView, cbShakeToReset, cbVibrate, chAutoEnable,
          disableSleeptimerButton, etxtTime, extendSleepFiveMinutesButton,
          extendSleepTenMinutesButton, extendSleepTwentyMinutesButton, setSleeptimerButton,
          spTimeUnit, time, timeDisplay, timeSetup);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
